{"version":3,"sources":["../../fable-arch/src/Fable.Arch/Fable.Arch.Html.fs"],"names":[],"mappings":"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","file":"Fable.Arch.Html.js","sourcesContent":["module Fable.Arch.Html\n\n[<AutoOpen>]\nmodule Types =\n    type EventHandler<'TMessage> = string*(obj -> 'TMessage)\n\n    type Style = (string*string) list\n\n    type KeyValue = string*string\n\n    type Attribute<'TMessage> =\n        | EventHandler of EventHandler<'TMessage>\n        | Style of Style\n        | Property of KeyValue\n        | Attribute of KeyValue\n\n    type Element<'TMessage> = string * Attribute<'TMessage> list\n    /// A Node in Html have the following forms\n    type VoidElement<'TMessage> = string * Attribute<'TMessage> list\n    type DomNode<'TMessage> =\n    /// A regular html element that can contain a list of other nodes\n    | Element of Element<'TMessage> * DomNode<'TMessage> list\n    /// A void element is one that can't have content, like link, br, hr, meta\n    /// See: https://dev.w3.org/html5/html-author/#void\n    | VoidElement of VoidElement<'TMessage>\n    /// A text value for a node\n    | Text of string\n    /// Whitespace for formatting\n    | WhiteSpace of string\n    | Svg of Element<'TMessage> * DomNode<'TMessage> list\n\nlet mapEventHandler<'T1,'T2> (mapping:('T1 -> 'T2)) (e,f) = EventHandler(e, f >> mapping)\n\nlet mapAttributes<'T1,'T2> (mapping:('T1 -> 'T2)) (attribute:Attribute<'T1>) =\n    match attribute with\n    | EventHandler(eb) -> mapEventHandler mapping eb\n    | Style s -> Style s\n    | Property kv -> Property kv\n    | Attribute kv -> Attribute kv\n\nlet mapElem<'T1,'T2> (mapping:('T1 -> 'T2)) (node:Element<'T1>) =\n    let (tag, attrs) = node\n    (tag, attrs |> List.map (mapAttributes mapping))\n\nlet mapVoidElem<'T1,'T2> (mapping:('T1 -> 'T2)) (node:Element<'T1>) =\n    let (tag, attrs) = node\n    (tag, attrs |> List.map (mapAttributes mapping))\n\nlet rec map<'T1,'T2> (mapping:('T1 -> 'T2)) (node:DomNode<'T1>) =\n    match node with\n    | Element(e,ns) -> Element(mapElem mapping e, ns |> List.map (map mapping))\n    | VoidElement(ve) -> VoidElement(mapVoidElem mapping ve)\n    | Text(s) -> Text s\n    | WhiteSpace(ws) -> WhiteSpace ws\n    | Svg(e,ns) -> Element(mapElem mapping e, ns |> List.map (map mapping))\n\n[<AutoOpen>]\nmodule Tags =\n    let elem tagName attrs children = Element((tagName, attrs), children)\n    let voidElem tagName attrs = VoidElement(tagName, attrs)\n\n    let whiteSpace x = WhiteSpace x\n    let text x = Text x\n\n    // Elements - list of elements here: https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n    // Void elements\n    let br x = voidElem \"br\" x\n    let area x = voidElem \"area\" x\n    let baseHtml x = voidElem \"base\" x\n    let col x = voidElem \"col\" x\n    let embed x = voidElem \"embed\" x\n    let hr x = voidElem \"hr\" x\n    let img x = voidElem \"img\" x\n    let input x = voidElem \"input\" x\n    let link x = voidElem \"link\" x\n    let meta x = voidElem \"meta\" x\n    let param x = voidElem \"param\" x\n    let source x = voidElem \"source\" x\n    let track x = voidElem \"track\" x\n    let wbr x = voidElem \"wbr\" x\n\n    // Metadata\n    let head x = elem \"head\" x\n    let style x = elem \"style\" x\n    let title x = elem \"title\" x\n\n    // Content sectioning\n    let address x = elem \"address\" x\n    let article x = elem \"article\" x\n    let aside x = elem \"aside\" x\n    let footer x = elem \"footer\" x\n    let header x = elem \"header\" x\n    let h1 x = elem \"h1\" x\n    let h2 x = elem \"h2\" x\n    let h3 x = elem \"h3\" x\n    let h4 x = elem \"h4\" x\n    let h5 x = elem \"h5\" x\n    let h6 x = elem \"h6\" x\n    let hgroup x = elem \"hgroup\" x\n    let nav x = elem \"nav\" x\n\n    // Text content\n    let dd x = elem \"dd\" x\n    let div x = elem \"div\" x\n    let dl x = elem \"dl\" x\n    let dt x = elem \"dt\" x\n    let figcaption x = elem \"figcaption\" x\n    let figure x = elem \"figure\" x\n    let li x = elem \"li\" x\n    let main x = elem \"main\" x\n    let ol x = elem \"ol\" x\n    let p x = elem \"p\" x\n    let pre x = elem \"pre\" x\n    let section x = elem \"section\" x\n    let ul x = elem \"ul\" x\n\n    // Text semantics\n    let a x = elem \"a\" x\n    let abbr x = elem \"abbr\" x\n    let b x = elem \"b\" x\n    let bdi x = elem \"bdi\" x\n    let bdo x = elem \"bdo\" x\n    let cite x = elem \"cite\" x\n    let code x = elem \"code\" x\n    let data x = elem \"data\" x\n    let dfn x = elem \"dfn\" x\n    let em x = elem \"em\" x\n    let i x = elem \"i\" x\n    let kbd x = elem \"kbd\" x\n    let mark x = elem \"mark\" x\n    let q x = elem \"q\" x\n    let rp x = elem \"rp\" x\n    let rt x = elem \"rt\" x\n    let rtc x = elem \"rtc\" x\n    let ruby x = elem \"ruby\" x\n    let s x = elem \"s\" x\n    let samp x = elem \"samp\" x\n    let small x = elem \"small\" x\n    let span x = elem \"span\" x\n    let strong x = elem \"strong\" x\n    let sub x = elem \"sub\" x\n    let sup x = elem \"sup\" x\n    let time x = elem \"time\" x\n    let u x = elem \"u\" x\n    let var x = elem \"var\" x\n\n    // Image and multimedia\n    let audio x = elem \"audio\" x\n    let map x = elem \"map\" x\n    let video x = elem \"video\" x\n\n    // Embedded content\n    let objectHtml x = elem \"object\" x\n\n    // Demarcasting edits\n    let del x = elem \"del\" x\n    let ins x = elem \"ins\" x\n\n    // Table content\n    let caption x = elem \"caption\" x\n    let colgroup x = elem \"colgroup\" x\n    let table x = elem \"table\" x\n    let tbody x = elem \"tbody\" x\n    let td x = elem \"td\" x\n    let tfoot x = elem \"tfoot\" x\n    let th x = elem \"th\" x\n    let thead x = elem \"thead\" x\n    let tr x = elem \"tr\" x\n\n    // Forms\n    let button x = elem \"button\" x\n    let datalist x = elem \"datalist\" x\n    let fieldset x = elem \"fieldset\" x\n    let form x = elem \"form\" x\n    let label x = elem \"label\" x\n    let legend x = elem \"legend\" x\n    let meter x = elem \"meter\" x\n    let optgroup x = elem \"optgroup\" x\n    let option x = elem \"option\" x\n    let output x = elem \"output\" x\n    let progress x = elem \"progress\" x\n    let select x = elem \"select\" x\n    let textarea x = elem \"textarea\" x\n\n    // Interactive elements\n    let details x = elem \"details\" x\n    let dialog x = elem \"dialog\" x\n    let menu x = elem \"menu\" x\n    let menuitem x = elem \"menuitem\" x\n    let summary x = elem \"summary\" x\n\n[<AutoOpen>]\nmodule Attributes =\n    let attribute key value = Attribute.Attribute (key,value)\n    let property key value = Attribute.Property (key,value)\n\n    /// class attribute helper\n    let classy value = attribute \"class\" value\n\n    /// Helper to build space separated class\n    let classList (list: (string*bool) seq) =\n        list\n            |> Seq.filter (fun (c,cond) -> cond)\n            |> Seq.map (fun (c, cond) -> c)\n            |> String.concat \" \"\n            |> classy\n\n    /// Helper to build space separated class with a static part\n    let classBaseList b (list: (string*bool) seq) =\n        list\n            |> Seq.filter (fun (c,cond) -> cond)\n            |> Seq.map (fun (c, cond) -> c)\n            |> String.concat \" \"\n            |> sprintf \"%s %s\" b\n            |> classy\n\n    let boolAttribute name (value: bool) =\n        attribute name (string value)\n\n[<AutoOpen>]\nmodule Events =\n    open Fable.Core.JsInterop\n    let onMouseEvent eventType f =\n        let h e =\n            e?stopPropagation() |> ignore\n            e?preventDefault() |> ignore\n            f e\n        EventHandler (eventType, h)\n\n    let onMouseClick x = onMouseEvent \"onclick\" x\n    let onContextMenu x = onMouseEvent \"oncontextmenu\" x\n    let onDblClick x = onMouseEvent \"ondblclick\" x\n    let onMouseDown x = onMouseEvent \"onmousedown\" x\n    let onMouseEnter x = onMouseEvent \"onmouseenter\" x\n    let onMouseLeave x = onMouseEvent \"onmouseleave\" x\n    let onMouseMove x = onMouseEvent \"onmousemove\" x\n    let onMouseOut x = onMouseEvent \"onmouseout\" x\n    let onMouseOver x = onMouseEvent \"onmouseover\" x\n    let onMouseUp x = onMouseEvent \"onmouseup\" x\n    let onShow x = onMouseEvent \"onshow\" x\n    let onKeyboardEvent eventType f = EventHandler (eventType, f)\n    let onKeydown x = onKeyboardEvent \"onkeydown\" x\n    let onKeypress x = onKeyboardEvent \"onkeypress\" x\n    let onKeyup x = onKeyboardEvent \"onkeyup\" x\n\n    let onEvent eventType f = EventHandler (eventType, f)\n    let onAbort x = onEvent \"onabort\" x\n    let onAfterPrint x = onEvent \"onafterprint\" x\n    let onAudioEnd x = onEvent \"onaudioend\" x\n    let onAudioStart x = onEvent \"onaudiostart\" x\n    let onBeforePrint x = onEvent \"onbeforeprint\" x\n    let onCached x = onEvent \"oncached\" x\n    let onCanPlay x = onEvent \"oncanplay\" x\n    let onCanPlayThrough x = onEvent \"oncanplaythrough\" x\n    let onChange x = onEvent \"onchange\" x\n    let onChargingChange x = onEvent \"onchargingchange\" x\n    let onChargingTimeChange x = onEvent \"onchargingtimechange\" x\n    let onChecking x = onEvent \"onchecking\" x\n    let onClose x = onEvent \"onclose\" x\n    let onDischargingTimeChange x = onEvent \"ondischargingtimechange\" x\n    let onDOMContentLoaded x = onEvent \"onDOMContentLoaded\" x\n    let onDownloading x = onEvent \"ondownloading\" x\n    let onDurationchange x = onEvent \"ondurationchange\" x\n    let onEmptied x = onEvent \"onemptied\" x\n    let onEnd x = onEvent \"onend\" x\n    let onEnded x = onEvent \"onended\" x\n    let onError x = onEvent \"onerror\" x\n    let onCullScreenChange x = onEvent \"onfullscreenchange\" x\n    let onCullScreenError x = onEvent \"onfullscreenerror\" x\n    let onInput x = onEvent \"oninput\" x\n    let onInvalid x = onEvent \"oninvalid\" x\n    let onLanguageChange x = onEvent \"onlanguagechange\" x\n    let onLevelChange x = onEvent \"onlevelchange\" x\n    let onLoadedData x = onEvent \"onloadeddata\" x\n    let onLoadedMetaData x = onEvent \"onloadedmetadata\" x\n    let onNoUpdate x = onEvent \"onnoupdate\" x\n    let onObsolete x = onEvent \"onobsolete\" x\n    let onOffline x = onEvent \"onoffline\" x\n    let onOnline x = onEvent \"ononline\" x\n    let onOpen x = onEvent \"onopen\" x\n    let onOrientationChange x = onEvent \"onorientationchange\" x\n    let onPause x = onEvent \"onpause\" x\n    let onPointerlockchange x = onEvent \"onpointerlockchange\" x\n    let onPointerlockerror x = onEvent \"onpointerlockerror\" x\n    let onPlay x = onEvent \"onplay\" x\n    let onPlaying x = onEvent \"onplaying\" x\n    let onRateChange x = onEvent \"onratechange\" x\n    let onReadyStateChange x = onEvent \"onreadystatechange\" x\n    let onReset x = onEvent \"onreset\" x\n    let onSeeked x = onEvent \"onseeked\" x\n    let onSeeking x = onEvent \"onseeking\" x\n    let onSelectStart x = onEvent \"onselectstart\" x\n    let onSelectionChange x = onEvent \"onselectionchange\" x\n    let onSoundEnd x = onEvent \"onsoundend\" x\n    let onSoundStart x = onEvent \"onsoundstart\" x\n    let onSpeechEnd x = onEvent \"onspeechend\" x\n    let onSpeechStart x = onEvent \"onspeechstart\" x\n    let onStalled x = onEvent \"onstalled\" x\n    let onStart x = onEvent \"onstart\" x\n    let onSubmit x = onEvent \"onsubmit\" x\n    let onSuccess x = onEvent \"onsuccess\" x\n    let onSuspend x = onEvent \"onsuspend\" x\n    let onTimeUpdate x = onEvent \"ontimeupdate\" x\n    let onUpdateReady x = onEvent \"onupdateready\" x\n    let onVoicesChanged x = onEvent \"onvoiceschanged\" x\n    let onVisibilityChange x = onEvent \"onvisibilitychange\" x\n    let onVolumeChange x = onEvent \"onvolumechange\" x\n    let onVrdisplayConnected x = onEvent \"onvrdisplayconnected\" x\n    let onVrdisplayDisconnected x = onEvent \"onvrdisplaydisconnected\" x\n    let onVrdisplayPresentChange x = onEvent \"onvrdisplaypresentchange\" x\n    let onWaiting x = onEvent \"onwaiting\" x\n\n    let onBlur x = onEvent \"onblur\" x\n    let onFocus x = onEvent \"onfocus\" x\n\n[<AutoOpen>]\nmodule Svg =\n    let svgNS = Attribute.Property(\"namespace\",\"http://www.w3.org/2000/svg\")\n    let svgElem tagName attrs children = Element((tagName, svgNS::attrs), children)\n\n    let svg x = svgElem \"svg\" x\n    let circle x = svgElem \"circle\" x\n    let rect x = svgElem \"rect\" x\n\n    let width x = attribute \"width\" x\n    let height x = attribute \"height\" x\n    let viewBox x = attribute \"viewBox\" x\n    let cx x = attribute \"cx\" x\n    let cy x = attribute \"cy\" x\n    let r x = attribute \"r\" x\n    let stroke x = attribute \"stroke\" x\n    let strokeWidth x = attribute \"stroke-width\" x\n    let fill x = attribute \"fill\" x\n"]}