var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import { createElement, Component } from "react";
import { setType } from "fable-core/Symbol";
import _Symbol from "fable-core/Symbol";
import { extendInfo } from "fable-core/Util";
import { render } from "react-dom";
export var Components = function (__exports) {
    var mounted = (Object.defineProperty(__exports, 'mounted', {
        get: function get() {
            return mounted;
        },
        set: function set(x) {
            return mounted = x;
        }
    }), false);

    var App = __exports.App = function (_Component) {
        _inherits(App, _Component);

        _createClass(App, [{
            key: _Symbol.reflection,
            value: function () {
                return extendInfo(App, {
                    type: "Fable.Arch.React.Components.App",
                    interfaces: [],
                    properties: {}
                });
            }
        }]);

        function App(props) {
            _classCallCheck(this, App);

            var _this2 = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

            _this2.this = {
                contents: null
            };
            var _this = _this2.this;
            _this2.this.contents = _this2;
            mounted = false;
            _this2.view = props.main(function (state) {
                _this2.safeState(state);
            });
            _this2["init@16"] = 1;
            return _this2;
        }

        _createClass(App, [{
            key: "componentDidMount",
            value: function () {
                mounted = true;
            }
        }, {
            key: "render",
            value: function () {
                return this.view(this.state);
            }
        }, {
            key: "safeState",
            value: function (state) {
                if (mounted) {
                    this.this.contents.setState(state);
                } else {
                    this.state = state;
                }
            }
        }]);

        return App;
    }(Component);

    setType("Fable.Arch.React.Components.App", App);
    return __exports;
}({});
export function createRenderer(viewFn, initModel, sel, h, v) {
    var setState = null;

    var main = function main(s) {
        setState = s;
        s(initModel);
        return function (model) {
            return viewFn(model)(h);
        };
    };

    var targetNode = document.body.querySelector(sel);
    var comp = createElement(Components.App, {
        main: main
    });
    render(comp, targetNode);
    return function (hand) {
        return function (vm) {
            setState(vm);
        };
    };
}
//# sourceMappingURL=Fable.Arch.React.js.map